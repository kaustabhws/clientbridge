generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Freelancer {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  clerkId      String   @unique
  profession   String
  bio          String?  
  skills       String[]
  balance      Float    @default(0.0)

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // relationships
  clients  Clients[]  
  projects Projects[]  
  invoices Invoices[]
}

model Clients {
  id       String  @id @default(cuid())
  name     String
  email    String  @unique
  phone    String?
  company  String?  
  address  String?  
  notes    String?  
  status   Status

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relationships
  freelancerId String
  freelancer   Freelancer @relation(fields: [freelancerId], references: [id])
  projects     Projects[]
  invoices     Invoices[]
}

model Projects {
  id          String   @id @default(cuid())
  name        String
  description String
  status      Status
  budget      Float?  
  deadline    DateTime
  milestones  Json?  
  attachments String[]  
  progress    Int      @default(0)  
  completedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relationships
  clientId     String
  client       Clients    @relation(fields: [clientId], references: [id])
  freelancerId String
  freelancer   Freelancer @relation(fields: [freelancerId], references: [id])
  invoices     Invoices[]
}

model Invoices {
  id            String   @id @default(cuid())
  invoiceNumber String   @unique
  amount        Float
  currency      String   @default("USD")
  status        InvoiceStatus
  dueDate       DateTime
  paidAt        DateTime?
  paymentMethod PaymentMethod
  notes         String?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // relationships
  freelancerId String
  freelancer   Freelancer @relation(fields: [freelancerId], references: [id])
  clientId     String
  client       Clients @relation(fields: [clientId], references: [id])
  projectId    String
  project      Projects @relation(fields: [projectId], references: [id])
}

enum Status {
  ACTIVE
  INACTIVE
}

enum InvoiceStatus {
  PENDING
  PAID
  OVERDUE
  CANCELLED
}

enum PaymentMethod {
  BANK_TRANSFER
  PAYPAL
  STRIPE
  UPI
  OTHER
}
